ACTION PLAN:

2) CLIENT
-- mutations.js 
-- -- LOGIN_USER will execute the loginUser mutation 
-- -- ADD_USER will execute the addUser mutation
-- -- SAVE_BOOK will execute the saveBook mutation
-- -- REMOVE_BOOK will execute the removeBook mutation

-- SearchBooks.js
-- -- use the Apollo useMutation() hook to execute the SAVE_BOOK mutation in the handleSaveBook() function instead of the saveBook() function imported from the API file
-- -- make sure to keep the logic for saving the book's ID to state in the try...catch block
-- SavedBooks.js
-- -- Remove the useEffect() Hook that sets the state for UserData
-- -- Instead, use the useQuery() hook to execute the GET_ME query on load and save it to a variable name UserData
-- -- Use the useMutation() hook to execute the REMOVE_BOOK mutation in the handleDeleteBook() function instead of the deleteBook() function that's imported from API file (make sure to keep the removeBookId() function in place)
-- signupForm.js
-- -- replace the addUser() functionality imported from the API file with the ADD_USER mutation functionality
-- loginForm.js
-- -- replace the loginUser() functionality imported from the API file with the LOGIN_USER mutation functionality